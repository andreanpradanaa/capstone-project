<?php

namespace Tests\Feature;

use App\Models\Food;
use App\Models\FoodDiary;
use App\Models\Goal;
use App\Models\GoalHistory;
use App\Models\Role;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Laravel\Sanctum\Sanctum;
use Tests\TestCase;

class GoalTest extends TestCase
{
    /**
     * A basic feature test example.
     *
     * @return void
     */
    use RefreshDatabase;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $role = Role::factory()->create(['name' => 'user', 'display_name' => 'User', 'description' => 'User']);
        $this->user = User::factory()->create();
        $this->user->roles()->attach($role);

        Sanctum::actingAs(
            $this->user,
            ['*']
        );

        Goal::factory()->create(['user_id' => $this->user->id]);
        GoalHistory::factory()->create(['user_id' => $this->user->id]);
    }

    public function test_user_fetch_goal_data()
    {
        $response = $this->getJson(route('goal.index'))
            ->assertOk();

        $this->assertEquals(1, $this->count($response->json()));
    }

    public function test_update_food_data()
    {
        $this->putJson(route('goal.update'), [
            'total_air' => 100,
            'total_energi' => 100,
            'total_protein' => 100,
            'total_lemak' => 100,
            'total_karbohidrat' => 100,
            'total_serat' => 100,
            'total_abu' => 100,
            'total_kalsium' => 100,
            'total_fosfor' => 100,
            'total_besi' => 100,
            'total_natrium' => 100,
            'total_kalium' => 100,
            'total_tembaga' => 100,
            'total_seng' => 100,
            'total_retinol' => 100,
            'total_b_karoten' => 100,
            'total_karoten_total' => 100,
            'total_thiamin' => 100,
            'total_riboflamin' => 100,
            'total_niasin' => 100,
            'total_vitamin_c' => 100,
        ])
            ->assertOk();

        $this->assertDatabaseHas('goals', [
            'total_air' => 100,
            'total_energi' => 100,
            'total_protein' => 100,
            'total_lemak' => 100,
            'total_karbohidrat' => 100,
            'total_serat' => 100,
            'total_abu' => 100,
            'total_kalsium' => 100,
            'total_fosfor' => 100,
            'total_besi' => 100,
            'total_natrium' => 100,
            'total_kalium' => 100,
            'total_tembaga' => 100,
            'total_seng' => 100,
            'total_retinol' => 100,
            'total_b_karoten' => 100,
            'total_karoten_total' => 100,
            'total_thiamin' => 100,
            'total_riboflamin' => 100,
            'total_niasin' => 100,
            'total_vitamin_c' => 100
        ]);
        $this->assertDatabaseHas('goal_histories', [
            'total_air' => 100,
            'total_energi' => 100,
            'total_protein' => 100,
            'total_lemak' => 100,
            'total_karbohidrat' => 100,
            'total_serat' => 100,
            'total_abu' => 100,
            'total_kalsium' => 100,
            'total_fosfor' => 100,
            'total_besi' => 100,
            'total_natrium' => 100,
            'total_kalium' => 100,
            'total_tembaga' => 100,
            'total_seng' => 100,
            'total_retinol' => 100,
            'total_b_karoten' => 100,
            'total_karoten_total' => 100,
            'total_thiamin' => 100,
            'total_riboflamin' => 100,
            'total_niasin' => 100,
            'total_vitamin_c' => 100
        ]);
    }
}
